buildscript {
    ext {
        springBootVersion = '1.3.0.RC1'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:0.11")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'com.moowork.node'

jar {
    baseName = 'pdf-search'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.elasticsearch:elasticsearch:1.7.3')
    compile('org.elasticsearch:elasticsearch-mapper-attachments:2.7.1')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('net.sourceforge.htmlunit:htmlunit:2.18')
}

task updateFrontendDependencies(type: NodeTask) {
    script = file('node_modules/bower/bin/bower')
    args = ['install']
    inputs.files file('bower.json')
    outputs.files file('src/main/resources/static/vendor')
    dependsOn npmInstall
}
processResources.dependsOn updateFrontendDependencies

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

node {
    download = true
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}
